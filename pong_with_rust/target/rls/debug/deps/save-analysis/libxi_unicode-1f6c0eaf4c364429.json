{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1","program":"/Users/victornascimento/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","xi_unicode","--edition=2018","/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=1f6c0eaf4c364429","-C","extra-filename=-1f6c0eaf4c364429","--out-dir","/Users/victornascimento/Documents/Projects/Rust/pong_with_rust/pong_with_rust/target/rls/debug/deps","-L","dependency=/Users/victornascimento/Documents/Projects/Rust/pong_with_rust/pong_with_rust/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/victornascimento/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/victornascimento/Documents/Projects/Rust/pong_with_rust/pong_with_rust/target/rls/debug/deps/libxi_unicode-1f6c0eaf4c364429.rmeta"},"prelude":{"crate_id":{"name":"xi_unicode","disambiguator":[15297713899166429927,14738295303812801008]},"crate_root":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src","external_crates":[{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}}],"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":600,"byte_end":27401,"line_start":15,"line_end":593,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":600,"byte_end":27401,"line_start":15,"line_end":593,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":63},{"krate":0,"index":71},{"krate":0,"index":68},{"krate":0,"index":11},{"krate":0,"index":15},{"krate":0,"index":73},{"krate":0,"index":78},{"krate":0,"index":76},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":35},{"krate":0,"index":44}],"decl_id":null,"docs":" Unicode utilities useful for text editing, including a line breaking iterator.\n","sig":null,"attributes":[{"value":"! Unicode utilities useful for text editing, including a line breaking iterator.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":600,"byte_end":682,"line_start":15,"line_end":15,"column_start":1,"column_end":83}},{"value":"no_std","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":683,"byte_end":693,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":785,"byte_end":803,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"linebreak_property","qualname":"::linebreak_property","value":"pub fn linebreak_property(char) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":1350,"byte_end":1372,"line_start":42,"line_end":42,"column_start":8,"column_end":30},"name":"linebreak_property_str","qualname":"::linebreak_property_str","value":"pub fn linebreak_property_str(&str, usize) -> (u8, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":63},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":2628,"byte_end":2645,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"LineBreakIterator","qualname":"::LineBreakIterator","value":"LineBreakIterator {  }","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" An iterator which produces line breaks according to the UAX 14 line\n breaking algorithm. For each break, return a tuple consisting of the offset\n within the source string and a bool indicating whether it's a hard break.\n","sig":null,"attributes":[{"value":"/ An iterator which produces line breaks according to the UAX 14 line","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":2364,"byte_end":2435,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ breaking algorithm. For each break, return a tuple consisting of the offset","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":2436,"byte_end":2515,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ within the source string and a bool indicating whether it's a hard break.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":2516,"byte_end":2593,"line_start":67,"line_end":67,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4116,"byte_end":4119,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<LineBreakIterator>::new","value":"pub fn new(&str) -> LineBreakIterator","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator for the given string slice.\n","sig":null,"attributes":[{"value":"/ Create a new iterator for the given string slice.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4051,"byte_end":4104,"line_start":111,"line_end":111,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5097,"byte_end":5114,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"LineBreakLeafIter","qualname":"::LineBreakLeafIter","value":"LineBreakLeafIter {  }","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"decl_id":null,"docs":" A class (TODO, not right word) useful for computing line breaks in a rope or\n other non-contiguous string representation. This is a trickier problem than\n iterating in a string for a few reasons, the trickiest of which is that in\n the general case, line breaks require an indeterminate amount of look-behind.","sig":null,"attributes":[{"value":"/ A class (TODO, not right word) useful for computing line breaks in a rope or","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4499,"byte_end":4579,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/ other non-contiguous string representation. This is a trickier problem than","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4580,"byte_end":4659,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ iterating in a string for a few reasons, the trickiest of which is that in","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4660,"byte_end":4738,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ the general case, line breaks require an indeterminate amount of look-behind.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4739,"byte_end":4820,"line_start":129,"line_end":129,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4821,"byte_end":4824,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This is something of an \"expert-level\" interface, and should only be used if","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4825,"byte_end":4905,"line_start":131,"line_end":131,"column_start":1,"column_end":81}},{"value":"/ the caller is prepared to respect all the invariants. Otherwise, you might","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4906,"byte_end":4984,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ get inconsistent breaks depending on start positiona and leaf boundaries.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4985,"byte_end":5062,"line_start":133,"line_end":133,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5584,"byte_end":5587,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<LineBreakLeafIter>::new","value":"pub fn new(&str, usize) -> LineBreakLeafIter","parent":null,"children":[],"decl_id":null,"docs":" Create a new line break iterator suitable for leaves in a rope.\n Precondition: ix is at a code point boundary within s.\n","sig":null,"attributes":[{"value":"/ Create a new line break iterator suitable for leaves in a rope.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5442,"byte_end":5509,"line_start":149,"line_end":149,"column_start":5,"column_end":72}},{"value":"/ Precondition: ix is at a code point boundary within s.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5514,"byte_end":5572,"line_start":150,"line_end":150,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":6437,"byte_end":6441,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"next","qualname":"<LineBreakLeafIter>::next","value":"pub fn next(&mut Self, &str) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Return break pos and whether it's a hard break. Note: hard break\n indication may go away, this may not be useful in actual application.\n If end of leaf is found, return leaf's len. This does not indicate\n a break, as that requires at least one more codepoint of context.\n If it is a break, then subsequent next call will return an offset of 0.\n EOT is always a break, so in the EOT case it's up to the caller\n to figure that out.","sig":null,"attributes":[{"value":"/ Return break pos and whether it's a hard break. Note: hard break","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5788,"byte_end":5856,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/ indication may go away, this may not be useful in actual application.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5861,"byte_end":5934,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ If end of leaf is found, return leaf's len. This does not indicate","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5939,"byte_end":6009,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ a break, as that requires at least one more codepoint of context.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":6014,"byte_end":6083,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ If it is a break, then subsequent next call will return an offset of 0.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":6088,"byte_end":6163,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ EOT is always a break, so in the EOT case it's up to the caller","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":6168,"byte_end":6235,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ to figure that out.","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":6240,"byte_end":6263,"line_start":162,"line_end":162,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":6268,"byte_end":6271,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ For consistent results, always supply same `s` until end of leaf is","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":6276,"byte_end":6347,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ reached (and initially this should be the same as in the `new` call).","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":6352,"byte_end":6425,"line_start":165,"line_end":165,"column_start":5,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":7653,"byte_end":7674,"line_start":206,"line_end":206,"column_start":8,"column_end":29},"name":"is_variation_selector","qualname":"::is_variation_selector","value":"pub fn is_variation_selector(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":7790,"byte_end":7798,"line_start":210,"line_end":210,"column_start":11,"column_end":19},"name":"EmojiExt","qualname":"::EmojiExt","value":"EmojiExt","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":7808,"byte_end":7836,"line_start":211,"line_end":211,"column_start":8,"column_end":36},"name":"is_regional_indicator_symbol","qualname":"::EmojiExt::is_regional_indicator_symbol","value":"pub fn is_regional_indicator_symbol(Self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":7859,"byte_end":7876,"line_start":212,"line_end":212,"column_start":8,"column_end":25},"name":"is_emoji_modifier","qualname":"::EmojiExt::is_emoji_modifier","value":"pub fn is_emoji_modifier(Self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":7899,"byte_end":7934,"line_start":213,"line_end":213,"column_start":8,"column_end":43},"name":"is_emoji_combining_enclosing_keycap","qualname":"::EmojiExt::is_emoji_combining_enclosing_keycap","value":"pub fn is_emoji_combining_enclosing_keycap(Self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":7957,"byte_end":7965,"line_start":214,"line_end":214,"column_start":8,"column_end":16},"name":"is_emoji","qualname":"::EmojiExt::is_emoji","value":"pub fn is_emoji(Self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":7988,"byte_end":8010,"line_start":215,"line_end":215,"column_start":8,"column_end":30},"name":"is_emoji_modifier_base","qualname":"::EmojiExt::is_emoji_modifier_base","value":"pub fn is_emoji_modifier_base(Self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":8033,"byte_end":8049,"line_start":216,"line_end":216,"column_start":8,"column_end":24},"name":"is_tag_spec_char","qualname":"::EmojiExt::is_tag_spec_char","value":"pub fn is_tag_spec_char(Self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":8072,"byte_end":8091,"line_start":217,"line_end":217,"column_start":8,"column_end":27},"name":"is_emoji_cancel_tag","qualname":"::EmojiExt::is_emoji_cancel_tag","value":"pub fn is_emoji_cancel_tag(Self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":8114,"byte_end":8120,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"is_zwj","qualname":"::EmojiExt::is_zwj","value":"pub fn is_zwj(Self) -> bool","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":8966,"byte_end":8980,"line_start":248,"line_end":248,"column_start":8,"column_end":22},"name":"is_keycap_base","qualname":"::is_keycap_base","value":"pub fn is_keycap_base(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":2723,"byte_end":2740,"line_start":75,"line_end":75,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4023,"byte_end":4040,"line_start":110,"line_end":110,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5167,"byte_end":5184,"line_start":140,"line_end":140,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5418,"byte_end":5435,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":2723,"byte_end":2740,"line_start":75,"line_end":75,"column_start":23,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":63},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":4023,"byte_end":4040,"line_start":110,"line_end":110,"column_start":10,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5167,"byte_end":5184,"line_start":140,"line_end":140,"column_start":18,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":73},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/Users/victornascimento/.cargo/registry/src/github.com-1ecc6299db9ec823/xi-unicode-0.2.1/src/lib.rs","byte_start":5418,"byte_end":5435,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}}]}